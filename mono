local M, L, C, V, W =
    game:GetService("GuiService"):GetGuiInset().Y,
    game.Players.LocalPlayer:GetMouse(),
    game.Players.LocalPlayer,
    Vector2.new,
    workspace.CurrentCamera
local T

local F = Drawing.new("Circle")
F.Transparency = 0.5
F.Thickness = 1.6
F.Color = Color3.fromRGB(230, 230, 250)
F.Filled = false

local U = function(R)
    if (not F) then
        return
    end

    F.Position = V(L.X, L.Y + (M))
    F.Visible = getgenv().Silent.Setting.FOV["Visible"]
    F.Radius = (R) * 3.067

    return F
end

task.spawn(function() while task.wait() do U(getgenv().Silent.Setting.FOV["Radius"]) end end)

local W = function(d, i)
    if getgenv().Silent.Setting.WallCheck then
        local O = W.CFrame.p
        local CR = Ray.new(O, d - O)
        local H = game.workspace:FindPartOnRayWithIgnoreList(CR, i)
        return H == nil
    else
        return true
    end
end

local C = function()
    local T, C = nil, 1 / 0
    for _, v in pairs(game.Players:GetPlayers()) do
        if (v.Character and v ~= C and v.Character:FindFirstChild("HumanoidRootPart")) then
            local P, OS = W:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
            local D = (V(P.X, P.Y) - V(L.X, L.Y)).Magnitude

            if
                (F.Radius > D and D < C and OS and
                    W(v.Character.HumanoidRootPart.Position, {C, v.Character}))
             then
                C = D
                T = v
            end
        end
    end
    return T
end

local O
O =
    hookmetamethod(
    game,
    "__index",
    function(s, k)
        if s:IsA("Mouse") and k == "Hit" then
            T = C()
            if T ~= nil then
                return T.Character[getgenv().Silent.Setting.TargetPart].CFrame +
                    (T.Character[getgenv().Silent.Setting.TargetPart].Velocity *
                        getgenv().Silent.Setting.Prediction)
            end
        end
        return O(s, k)
    end
)
